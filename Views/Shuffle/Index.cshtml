@****************************************************************************************
 *    Title: <JavaScript Timing Events>
 *    Author: <W3Schools>
 *    Date Published: <2023>
 *    Date Retrieved: <20 November 2023>
 *    Code version: <1.0.0>
 *    Availability: <https://www.w3schools.com/js/js_timing.asp>
 *
 ****************************************************************************************@

@****************************************************************************************
 *    Title: <JavaScript Math Object>
 *    Author: <W3Schools>
 *    Date Published: <2023>
 *    Date Retrieved: <19 November 2023>
 *    Code version: <1.0.0>
 *    Availability: <https://www.w3schools.com/js/js_math.asp>
 *
 ****************************************************************************************@

@****************************************************************************************
 *    Title: <W3.CSS Progress Bars>
 *    Author: <W3Schools>
 *    Date Published: <2023>
 *    Date Retrieved: <18 November 2023>
 *    Code version: <1.0.0>
 *    Availability: <https://www.w3schools.com/w3css/w3css_progressbar.asp>
 *
 ****************************************************************************************@

@model Dictionary<string, string>

@{
    ViewBag.Title = "Shuffle Task";
}

<style>
    /* Add custom styles for countdown timer, score display, and progress bar */
    #timer, #score {
        font-size: 18px;
        font-weight: bold;
        color: #333;
        margin-right: 10px;
    }

    #submitBtn {
        padding: 10px;
        background-color: #007bff;
        color: #fff;
        border: none;
        cursor: pointer;
        font-size: 16px;
        font-weight: bold;
    }

    .answers-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-top: 15px;
    }

    .answer-item {
        flex-basis: calc(50% - 20px); /* Two columns with a 20px gap in between */
    }

    .progress-container {
        display: flex;
        align-items: center;
        margin-top: 15px;
    }

    .progress-bar {
        height: 20px;
        background-color: #f0f0f0;
        border-radius: 10px;
        overflow: hidden;
        flex-grow: 1; /* Ensure the progress bar takes up remaining space */
    }

    .progress-fill {
        height: 100%;
        background-color: #007bff;
        transition: width 1s ease-in-out;
    }

    #progressLabel {
        margin-left: 10px;
    }
</style>

<h2>Identifying Areas</h2>

@using (Html.BeginForm("CheckAnswer", "Shuffle", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="answers-container">
        @foreach (var pair in Model)
        {
            <div class="answer-item">
                <span>@pair.Key</span>
                @Html.DropDownList("userAnswers[" + pair.Key + "]", new SelectList(Model.OrderBy(x => Guid.NewGuid()), "Value", "Value"), "-- Select an answer --")
            </div>
        }
    </div>

    <hr>

    <div id="timer">Time remaining: 60 seconds</div>
    <div id="score">Score: 0</div>

    <div class="progress-container">
        <div class="progress-bar">
            <div class="progress-fill" id="progressFill"></div>
        </div>
        <span id="progressLabel">0%</span>
    </div>

    <hr />

    <button type="submit" id="submitBtn">Check Answer</button>
}

@section scripts {
    <script>
        let timeLeft = 60;
        let score = 0;
        const submitBtn = document.getElementById("submitBtn");

        const interval = setInterval(() => {
            if (timeLeft <= 0) {
                clearInterval(interval);
                submitBtn.click(); // Automatically submit when time is up
                return;
            }

            timeLeft--;
            document.getElementById("timer").innerText = "Time remaining: " + timeLeft + " seconds";

            // Update the score based on the user's progress
            const progress = (60 - timeLeft) / 60;
            score = Math.floor(progress * 100);
            document.getElementById("score").innerText = "Score: " + score;

            // Update the progress bar
            const progressFill = document.getElementById("progressFill");
            const progressLabel = document.getElementById("progressLabel");
            const progressPercentage = Math.round(progress * 100);
            progressFill.style.width = progressPercentage + "%";
            progressLabel.innerText = progressPercentage + "%";
        }, 1000);
    </script>
}
